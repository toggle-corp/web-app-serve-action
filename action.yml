name: Publish web-app-serve
description: 'Reusable action to publish web-app-serve'

inputs:
  # https://github.com/actions/runner/issues/1557
  github_token:
    description: "github token for docker push to ghcr.io"
    required: true
  docker_target:
    description: "docker target for web-app-serve"
    default: web-app-serve

outputs:
  # Docker
  docker_image_name:
    description: "Only docker image name"
    value: ${{ steps.prep.outputs.docker_image_name }}
  docker_image_tag:
    description: "Only docker image tag"
    value: ${{ steps.prep.outputs.docker_image_tag }}
  docker_image:
    description: "docker image with tag"
    value: ${{ steps.prep.outputs.docker_image }}

runs:
  using: "composite"
  steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - name: 🐳 Prepare Docker
      id: prep
      env:
        DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository }}
      shell: bash
      run: |
        BRANCH_NAME=$(\
          echo $GITHUB_REF_NAME | \
          sed 's|:|-|' | \
          tr '[:upper:]' '[:lower:]' | \
          sed 's/_/-/g' | \
          cut -c1-100 | \
          sed 's/-*$//'\
        )

        GIT_HASH="c$(echo $GITHUB_SHA | head -c7)"

        # XXX: Check if there is a slash in the BRANCH_NAME eg: project/add-docker
        if [[ "$BRANCH_NAME" == *"/"* ]]; then
            # XXX: Change the docker image package to -dev
            DOCKER_IMAGE_NAME="$DOCKER_IMAGE_NAME-dev"
            DOCKER_IMAGE_TAG="$(echo "$BRANCH_NAME" | sed 's|/|-|g').$GIT_HASH"
        else
            DOCKER_IMAGE_TAG="$BRANCH_NAME.$GIT_HASH"
        fi
        DOCKER_IMAGE_NAME=$(echo $DOCKER_IMAGE_NAME | tr '[:upper:]' '[:lower:]')

        echo "docker_image_name=${DOCKER_IMAGE_NAME}" >> $GITHUB_OUTPUT
        echo "docker_image_tag=${DOCKER_IMAGE_TAG}" >> $GITHUB_OUTPUT
        echo "docker_image=${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}" >> $GITHUB_OUTPUT

    - name: 🐳 Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: 🐳 Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.ref }}
        restore-keys: |
          ${{ runner.os }}-buildx-refs/develop
          ${{ runner.os }}-buildx-

    - name: 🐳 Docker build
      uses: docker/build-push-action@v6
      with:
        context: .
        builder: ${{ steps.buildx.outputs.name }}
        file: Dockerfile
        target: ${{ inputs.docker_target }}
        push: false
        load: true
        provenance: false  # XXX: Without this we have untagged images in ghcr.io
        tags: ${{ steps.prep.outputs.docker_image }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 🐳 Docker push
      run: docker push $DOCKER_IMAGE
      shell: bash
      env:
        DOCKER_IMAGE: ${{ steps.prep.outputs.docker_image }}

    - name: 🐳 Summary/Annotations generate
      shell: bash
      env:
        DOCKER_IMAGE_NAME: ${{ steps.prep.outputs.docker_image_name }}
        DOCKER_IMAGE_TAG: ${{ steps.prep.outputs.docker_image_tag }}
        DOCKER_IMAGE: ${{ steps.prep.outputs.docker_image }}
      run: |
        echo "# Docker Build info" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "> [!Important]" >> $GITHUB_STEP_SUMMARY
        echo "> Docker name: **$DOCKER_IMAGE_NAME**" >> $GITHUB_STEP_SUMMARY
        echo "> Docker tag: **$DOCKER_IMAGE_TAG**" >> $GITHUB_STEP_SUMMARY
        echo "> Docker image: **$DOCKER_IMAGE**" >> $GITHUB_STEP_SUMMARY

        # Add annotations as well (This is shown in reverse order)
        echo "::notice::Docker image: $DOCKER_IMAGE"
        echo "::notice::Docker tag: $DOCKER_IMAGE_TAG"
        echo "::notice::Docker name: $DOCKER_IMAGE_NAME"
